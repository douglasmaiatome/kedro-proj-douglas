from typing import Dict, List

import pandas as pd


def _restructure_tables_parameters(
    audit_report_parameters: Dict, table_name: str
) -> Dict:
    """Restructure the parameters in yml file in a more easily ingest way,
    e.g. {
            {"staged_table_1": {"_default_":   {default summary statistics parameters for variables in table 1}},
                               {"variable_1":  {variable 1 specific summary statistics parameters},
                               {"variable_2":  {...},
                               {...}},
            {"staged_table_2": {"_default_":   {...},
                               {...}},
            {...},
        }

    Args:
        audit_report_parameters: Parameters structure in audit_report_parameters.yml
        table_name: Target table name the parameters of which to be restructured

    Return:
        Restructured table parameters structure,
        e.g. { "_default_":   {default summary statistics parameters for variables in table 1}},
               "variable_1":  {variable 1 specific summary statistics parameters},
               "variable_2":  {...},
               ...}
    """

    # if table name is not specified in the parameters file, use default
    table_parameters = {"_default_": audit_report_parameters.get("default")}

    # We need to adjust the table name to be able to apply custom parameters to both the original audit report
    # generated by the audit_report_pipeline and the audit reports where we test data treatments in
    # evaluate_data_treatments pipeline
    table_basename = "_".join(table_name.split("_")[1:])
    new_table_name = "staging_" + table_basename

    if new_table_name in audit_report_parameters.keys():
        # when table/variable is specified to follow certain template, assign the specific parameters to it
        for specified_template, specified_columns in audit_report_parameters[
            new_table_name
        ].items():
            if specified_columns is True:
                table_parameters["_default_"] = audit_report_parameters[
                    "custom_options"
                ][specified_template]
            else:
                special_cases = {}
                for column_name in specified_columns:
                    special_cases[column_name] = audit_report_parameters[
                        "custom_options"
                    ][specified_template]
                table_parameters.update(special_cases)

    return table_parameters


def _arrange_distribution_columns(
    output_option_parameters: List,
    audit_report_distribution: pd.DataFrame,
    audit_value_counts: pd.DataFrame,
) -> List[pd.DataFrame]:
    """Arrange the audit report output display and columns order

    Args:
        output_option_parameters: Output option parameters specified in audit_report_parameter.yml
        audit_report_distribution: Distribution dataFrame columns of which to be rearranged
        audit_value_counts: Value counts dataFrame columns of which to be rearranged

    Return:
        List of two pandas dataframes of distribution and value counts with columns rearranged
    """
    # For distribution audit report
    distribution_default_columns = [
        "HOST",
        "FILEPATH",
        "PARTITION_NAME",
        "VARIABLE",
        "TOTAL_NO_OF_OBSERVATIONS",
        "MISSING_COUNT",
        "MISSING_PERCENTAGE",
        "NO_DISTINCT_CATEGORIES",
    ]

    distribution_display_columns = output_option_parameters
    percentile_columns = [
        col for col in audit_report_distribution.columns if "%" in str(col)
    ]

    if "MIN" in distribution_display_columns:
        percentile_insert_loc = distribution_display_columns.index("MIN") + 1
    elif "MAX" in distribution_display_columns:
        percentile_insert_loc = distribution_display_columns.index("MAX")
    else:
        percentile_insert_loc = len(distribution_display_columns)

    distribution_display_columns[
        percentile_insert_loc:percentile_insert_loc
    ] = percentile_columns

    # For value counts audit report
    value_counts_default_columns = [
        "HOST",
        "FILEPATH",
        "PARTITION_NAME",
        "VARIABLE",
        "LEVEL",
        "LEVEL_FREQUENCY",
    ]

    distribution_report_columns = (
        distribution_default_columns + distribution_display_columns
    )

    return [
        audit_report_distribution[distribution_report_columns],
        audit_value_counts[value_counts_default_columns],
    ]
